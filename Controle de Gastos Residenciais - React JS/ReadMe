# GastosResidenciais - Documentação do Projeto

Este documento reúne comentários e explicações sobre os principais componentes do projeto, demonstrando os conceitos aplicados e as boas práticas adotadas.

---

## Index (GastosResidenciais)
- **Função:** Componente principal que configura a aplicação.
- **Como funciona:**
  - Cria as rotas e carrega os componentes: Pessoas, Transações e ConsultaTotais.
  - Utiliza o contexto `useTheme` para aplicar temas (claro/escuro) e o `DataContext` para gerenciar os dados.
  - Envolve a aplicação com o `DataProvider`, garantindo que todos os dados (pessoas, transações e totais) sejam persistidos no localStorage.
- **Interface:** 
  - Importa o module.css para estilizar a interface.
  - Organiza as seções do site, servindo como ponto de entrada para a aplicação.

---

## DataContext e DataProvider
- **Função:** Armazenam e gerenciam os dados de pessoas, transações e IDs, usando o localStorage.
- **Como funciona:**
  - Quando a aplicação inicia, os dados salvos (pessoas, transações e o último ID) são carregados do localStorage e atribuídos aos estados iniciais.
  - Fornecem funções para adicionar, editar e excluir pessoas e transações.
  - Toda vez que os dados são alterados, os estados são atualizados e os novos valores são salvos no localStorage.
- **Uso:** Envolvendo a aplicação com o DataProvider, todos os componentes filhos podem acessar esses dados e funções via DataContext.

---

## CadastroPessoa
- **Função:** Permite cadastrar ou editar uma pessoa.
- **Como funciona:**
  - Usa estados locais para armazenar os valores dos campos "nome" e "idade".
  - Se uma pessoa for passada para edição, os campos são pré-preenchidos com os dados existentes (via useEffect).
  - No envio do formulário, realiza validações simples (verifica se o nome não está vazio, se o tamanho está dentro do permitido e se a idade é numérica e válida).
  - Dependendo do caso, chama a função para cadastrar (addPessoa) ou atualizar (updatePessoa) no contexto.
- **Interface:** Exibe um formulário com inputs para nome e idade, com temas dinâmicos (claro/escuro) conforme o contexto.

---

## ListaPessoas
- **Função:** Exibe todas as pessoas cadastradas em uma tabela.
- **Como funciona:**
  - Obtém a lista de pessoas a partir do DataContext.
  - Mostra o ID, nome e idade de cada pessoa em uma tabela.
  - Oferece botões para editar (que chamam uma função do componente pai) e excluir, com confirmação antes de remover.
- **Interface:** A tabela é estilizada de acordo com o tema atual (claro ou escuro).

---

## Pessoas
- **Função:** Integra os componentes de cadastro (CadastroPessoa) e listagem (ListaPessoas) de pessoas.
- **Como funciona:**
  - Gerencia estados para controlar a exibição do modal de cadastro/edição e para armazenar a pessoa a ser editada.
  - Possui um botão para abrir o modal de cadastro, e ao editar, passa os dados da pessoa para o formulário.
  - Exibe a lista de pessoas cadastradas e permite editar ou excluir um registro.
- **Interface:** Combina os componentes de cadastro e listagem em um container estilizado e responsivo, adaptado ao tema atual.

---

## CadastroTransacao
- **Função:** Responsável por cadastrar uma nova transação.
- **Como funciona:**
  - Possui campos para descrição, valor, tipo (receita ou despesa) e seleção da pessoa.
  - Realiza validações, como:
    - Verificar se todos os campos foram preenchidos.
    - Garantir que a descrição tenha no máximo 100 caracteres.
    - Checar se o valor é numérico e positivo.
    - Confirmar se a pessoa selecionada existe e, para menores de 18 anos, se a transação é somente de despesa.
  - Após validar, cria uma transação com um ID único (usando Date.now()) e chama a função addTransacao do DataContext para salvar.
  - Reseta os campos e, se definido, chama onTransacaoCadastrada para fechar o modal.
- **Interface:** Adapta a aparência conforme o tema (claro/escuro) e apresenta um formulário organizado.

---

## ListaTransacoes
- **Função:** Exibe todas as transações cadastradas em uma tabela.
- **Como funciona:**
  - Puxa as transações do DataContext e lista em uma tabela com colunas para id da pessoa, descrição, tipo e valor.
  - Os valores são formatados para exibição com vírgula (usando `toLocaleString('pt-BR', ...)`).
  - Permite editar ou excluir cada transação:
    - Ao editar, abre um modal com os dados pré-preenchidos; o valor é convertido para string com vírgula para exibição e, ao salvar, convertido de volta para número.
    - Excluir é feito com uma confirmação antes de remover o registro.
- **Interface:** A tabela e o modal de edição seguem o tema atual, claro ou escuro.

---

## Transacoes
- **Função:** Integra os componentes de cadastro (CadastroTransacao) e listagem (ListaTransacoes) de transações.
- **Como funciona:**
  - Possui um botão para abrir o modal de cadastro de transação.
  - Controla a abertura e fechamento do modal via estados.
  - Exibe a lista de transações cadastradas.
- **Interface:** Aplica o tema dinâmico (claro/escuro) e organiza a interface de forma responsiva e intuitiva.

---

## ConsultaTotais
- **Função:** Calcula e exibe os totais por pessoa e o total geral (receitas, despesas e saldo).
- **Como funciona:**
  - Para cada pessoa, filtra as transações e soma os valores conforme o tipo (receita ou despesa), calculando também o saldo.
  - Os totais são formatados para exibição com vírgula.
- **Interface:** Exibe os totais em tabelas bem organizadas, com layout que se adapta ao tema atual (claro/escuro).
